// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	pty "github.com/thecoderstudio/apollo-agent/pty"

	websocket "github.com/thecoderstudio/apollo-agent/websocket"
)

// ShellManager is an autogenerated mock type for the ShellManager type
type ShellManager struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *ShellManager) Close() {
	_m.Called()
}

// CreateNewSession provides a mock function with given fields: _a0
func (_m *ShellManager) CreateNewSession(_a0 string) *pty.Session {
	ret := _m.Called(_a0)

	var r0 *pty.Session
	if rf, ok := ret.Get(0).(func(string) *pty.Session); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pty.Session)
		}
	}

	return r0
}

// Execute provides a mock function with given fields: _a0
func (_m *ShellManager) Execute(_a0 websocket.ShellIO) {
	_m.Called(_a0)
}

// ExecutePredefinedCommand provides a mock function with given fields: _a0
func (_m *ShellManager) ExecutePredefinedCommand(_a0 websocket.Command) {
	_m.Called(_a0)
}

// GetSession provides a mock function with given fields: _a0
func (_m *ShellManager) GetSession(_a0 string) *pty.Session {
	ret := _m.Called(_a0)

	var r0 *pty.Session
	if rf, ok := ret.Get(0).(func(string) *pty.Session); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pty.Session)
		}
	}

	return r0
}

// Out provides a mock function with given fields:
func (_m *ShellManager) Out() <-chan websocket.ShellIO {
	ret := _m.Called()

	var r0 <-chan websocket.ShellIO
	if rf, ok := ret.Get(0).(func() <-chan websocket.ShellIO); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan websocket.ShellIO)
		}
	}

	return r0
}
